/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 *   This file is part of
 *       _______   ______________  ______     _____
 *      / ____/ | / /  _/ ____/  |/  /   |   |__  /
 *     / __/ /  |/ // // / __/ /|_/ / /| |    /_ <
 *    / /___/ /|  // // /_/ / /  / / ___ |  ___/ /
 *   /_____/_/ |_/___/\____/_/  /_/_/  |_| /____/.
 * 
 *   Copyright © 2003-2010 Brain Control, all rights reserved.
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

sampler s_target: register(s0);

float2  c_dist:   register(c0);
float2  c_texDim: register(c15);

// Gaussian blur approximation using linear
// sampling, which requires less texture fetches.
float4 main(const float2 texCoord: TEXCOORD0) : COLOR 
{
    const float2 adj = c_dist*c_texDim;
    const float2 offset[3] = { float2(0.0f, 0.0f), 1.3846153846f*adj, 3.2307692308f*adj };
    const float weight[3] = { 0.2270270270, 0.3162162162, 0.0702702703 };

    float4 res = tex2D(s_target, texCoord)*weight[0];
    res += (tex2D(s_target, texCoord+offset[1])+tex2D(s_target, texCoord-offset[1]))*weight[1];
    res += (tex2D(s_target, texCoord+offset[2])+tex2D(s_target, texCoord-offset[2]))*weight[2];

    return res;
}